{"version":3,"file":"static/js/708.a3854b72.chunk.js","mappings":"+LAEaA,E,QAAgBC,GAAAA,IAAH,kE,SCCbC,EAAS,WAClB,OACI,SAACF,EAAD,WACI,SAAC,KAAD,CACIG,MAAM,MACNC,YAAY,gB,uFCNfC,E,QAAWJ,GAAAA,GAAH,iL,SCERK,EAAa,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClBC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,+BACI,wBACKF,EAAOG,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAN,OACR,SAACP,EAAD,WACI,SAAC,KAAD,CAAMQ,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SAAuDI,KAD5CD,Y,0MCT7BK,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBC,IAAAA,IAAA,sCAAyCF,EAAzC,oBADpB,cACGG,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACoBJ,IAAAA,IAAA,gCAAmCF,EAAnC,kBAAoDM,EAApD,+CADpB,cACGH,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BZ,GAA/B,uFACoBO,IAAAA,IAAA,iBAAoBP,EAApB,oBAAkCK,EAAlC,oBADpB,cACGG,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAuBb,GAAvB,uFACoBO,IAAAA,IAAA,iBAAoBP,EAApB,4BAA0CK,EAA1C,oBADpB,cACGG,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA0Bd,GAA1B,uFACoBO,IAAAA,IAAA,iBAAoBP,EAApB,4BAA0CK,EAA1C,2BADpB,cACGG,EADH,yBAEIA,EAASC,MAFb,kEAtBPF,IAAAA,SAAAA,QAAyB,gC,8JCEZQ,EAAW,WACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOpB,EAAP,KAAeqB,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,2FACID,GAAW,GADf,mBAG6Bb,EAAAA,EAAAA,MAAoBe,MAAK,SAAAZ,GAAI,OAAIA,EAAKa,WAHnE,OAGc1B,EAHd,OAIQqB,EAAUrB,GAJlB,gDAMQ2B,QAAQC,IAAI,KAAMC,SAN1B,yBAQQN,GAAW,GARnB,6EADY,uBAAC,WAAD,wBAaZO,KACD,KAGC,iCACI,4CACA,SAAC,IAAD,CAAY9B,OAAQA,IACnBsB,IAAW,SAAC,IAAD","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","services/moviesApi.jsx","views/HomeView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  width: fit-content;\n  margin: 0 auto;\n`;","import { RotatingLines } from  'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => {\n    return (\n        <LoaderWrapper>\n            <RotatingLines \n                width=\"100\" \n                strokeColor=\"#a7a7a7\"\n            />\n        </LoaderWrapper>\n    );\n}; ","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  margin-bottom: 4px;\n  \n  &:hover,\n  &:focus {\n    color: var(--accent-color);\n  }\n\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`;","import propTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { ListItem } from './MoviesList.styled';\n\nexport const MoviesList = ({movies}) => {\n    const location = useLocation();\n\n    return (\n        <>\n            <ul>\n                {movies.map(({id, title}) => (\n                    <ListItem key={id}>\n                        <Link to={`/movies/${id}`} state={{ from: location }}>{title}</Link>\n                    </ListItem>\n                ))}\n            </ul>\n        </>\n    );\n};\n\nMoviesList.propTypes = {\n    movies: propTypes.arrayOf(propTypes.object).isRequired,\n};","import axios from 'axios';\n\nconst API_KEY = 'b9577cb72f619941d2b4ff770ab268ce';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrendingMovies() {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport async function getSearchMovie(query) {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n    return response.data;\n};\n\nexport async function getMovieDetails(id) {\n    const response = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport async function getCast(id) {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport async function getReviews(id) {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;\n};","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from '../services/moviesApi';\nimport { MoviesList } from '../components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';  \n\nexport const HomeView = () => {\n    const [movies, setMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        async function fetchTrendingMovies() {\n            setLoading(true);\n            try {\n                const movies = await getTrendingMovies().then(data => data.results);\n                setMovies(movies);\n            } catch (error) {\n                console.log(error.message);\n            } finally {\n                setLoading(false);\n            }\n        }\n\n        fetchTrendingMovies();   \n    }, []);\n\n    return (\n        <>\n            <h2>Trending today</h2>\n            <MoviesList movies={movies} />\n            {loading && <Loader />}\n        </> \n    );\n};\n"],"names":["LoaderWrapper","styled","Loader","width","strokeColor","ListItem","MoviesList","movies","location","useLocation","map","id","title","to","state","from","API_KEY","getTrendingMovies","axios","response","data","getSearchMovie","query","getMovieDetails","getCast","getReviews","HomeView","useState","setMovies","loading","setLoading","useEffect","then","results","console","log","message","fetchTrendingMovies"],"sourceRoot":""}